version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: eatwise_postgres
    environment:
      POSTGRES_DB: eatwise
      POSTGRES_USER: eatwise_user
      POSTGRES_PASSWORD: eatwise_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - eatwise_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eatwise_user -d eatwise"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: eatwise_backend
    environment:
      - DATABASE_URL=postgresql://eatwise_user:eatwise_password@postgres:5432/eatwise
      - SUPABASE_URL=your_supabase_url_here
      - SUPABASE_KEY=your_supabase_anon_key_here
      - SUPABASE_JWT_SECRET=your_supabase_jwt_secret_here
      - OPENAI_API_KEY=your_openai_api_key_here
      - STRIPE_SECRET_KEY=your_stripe_secret_key_here
      - STRIPE_PUBLISHABLE_KEY=your_stripe_publishable_key_here
      - STRIPE_WEBHOOK_SECRET=your_stripe_webhook_secret_here
      - APP_ENVIRONMENT=development
      - CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - eatwise_network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (optional - for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: eatwise_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - eatwise_network
    command: redis-server --appendonly yes

volumes:
  postgres_data:
  redis_data:

networks:
  eatwise_network:
    driver: bridge