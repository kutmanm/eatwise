"""Initial database schema

Revision ID: ea591d909b77
Revises: 
Create Date: 2025-08-05 22:42:10.077727

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ea591d909b77'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('FREE', 'PREMIUM', 'TRIAL', name='userrole'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('stripe_customer_id', sa.String(), nullable=True),
    sa.Column('subscription_id', sa.String(), nullable=True),
    sa.Column('subscription_end', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
  
    op.create_index('ix_feedback_user_date', 'feedback', ['user_id', 'sent_at'], unique=False)
    op.create_index(op.f('ix_feedback_user_id'), 'feedback', ['user_id'], unique=False)
    op.create_table('meals',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('calories', sa.Float(), nullable=True),
    sa.Column('protein', sa.Float(), nullable=True),
    sa.Column('carbs', sa.Float(), nullable=True),
    sa.Column('fat', sa.Float(), nullable=True),
    sa.Column('fiber', sa.Float(), nullable=True),
    sa.Column('water', sa.Float(), nullable=True),
    sa.Column('logged_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_meals_user_id'), 'meals', ['user_id'], unique=False)
    op.create_index('ix_meals_user_logged', 'meals', ['user_id', 'logged_at'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('plan', sa.String(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscriptions_user_id'), 'subscriptions', ['user_id'], unique=True)
    op.create_table('user_profiles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'OTHER', 'PREFER_NOT_TO_SAY', name='gender'), nullable=False),
    sa.Column('height', sa.Float(), nullable=False),
    sa.Column('initial_weight', sa.Float(), nullable=False),
    sa.Column('current_weight', sa.Float(), nullable=False),
    sa.Column('target_weight', sa.Float(), nullable=False),
    sa.Column('activity_level', sa.Enum('SEDENTARY', 'LIGHTLY_ACTIVE', 'MODERATELY_ACTIVE', 'VERY_ACTIVE', 'EXTREMELY_ACTIVE', name='activitylevel'), nullable=False),
    sa.Column('goal', sa.Enum('WEIGHT_LOSS', 'MUSCLE_GAIN', 'MAINTAIN', 'BODY_RECOMPOSITION', name='goaltype'), nullable=False),
    sa.Column('time_frame', sa.Enum('WEEKS_2', 'MONTH_1', 'MONTHS_3', 'MONTHS_6', 'YEAR_1', 'CUSTOM', name='timeframe'), nullable=False),
    sa.Column('target_date', sa.DateTime(), nullable=True),
    sa.Column('water_goal', sa.Float(), nullable=False),
    sa.Column('calorie_goal', sa.Float(), nullable=True),
    sa.Column('protein_goal', sa.Float(), nullable=True),
    sa.Column('carb_goal', sa.Float(), nullable=True),
    sa.Column('fat_goal', sa.Float(), nullable=True),
    sa.Column('diet_preferences', sa.JSON(), nullable=True),
    sa.Column('breakfast_time', sa.Time(), nullable=True),
    sa.Column('lunch_time', sa.Time(), nullable=True),
    sa.Column('dinner_time', sa.Time(), nullable=True),
    sa.Column('snack_times', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_profiles_user_id'), 'user_profiles', ['user_id'], unique=False)
    op.create_table('weight_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('logged_at', sa.DateTime(), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_weight_logs_user_date', 'weight_logs', ['user_id', 'logged_at'], unique=False)
    op.create_index(op.f('ix_weight_logs_user_id'), 'weight_logs', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_weight_logs_user_id'), table_name='weight_logs')
    op.drop_index('ix_weight_logs_user_date', table_name='weight_logs')
    op.drop_table('weight_logs')
    op.drop_index(op.f('ix_user_profiles_user_id'), table_name='user_profiles')
    op.drop_table('user_profiles')
    op.drop_index(op.f('ix_subscriptions_user_id'), table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index('ix_meals_user_logged', table_name='meals')
    op.drop_index(op.f('ix_meals_user_id'), table_name='meals')
    op.drop_table('meals')
   
    op.drop_table('users')
    # ### end Alembic commands ###
